class Solution 
{
public:
int Binary_search(vector<int>& nums, int target, int l, int r)
{
    int mid;
    if (l > r)
    {
        return l;
    }
    mid = l + (r - l) / 2;
    if (target > nums[mid]) 
        return Binary_search(nums, target, mid + 1, r);
    else if (target < nums[mid])
        return Binary_search(nums, target, l, mid - 1);
    else
        return mid;
}

    int searchInsert(vector<int>& nums, int target) 
    {
        return Binary_search(nums, target, 0, nums.size() - 1);
    }
};
