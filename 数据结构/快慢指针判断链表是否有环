/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* detectCycle(ListNode* head) 
    {
        if (!head || head->next == NULL)
            return NULL;
        ListNode* Quick = head;
        ListNode* Slow = head;
        while (NULL != Quick && NULL != Quick->next)
        {
            Quick = Quick->next->next;
            Slow = Slow->next;
           if (Quick == Slow) //难搞啊
                {
                    ListNode* ptr = head;
                    while (ptr != Slow) 
                    {
                        ptr = ptr->next;
                        Slow = Slow->next;
                    }
                    return ptr;
                }
        }
        return NULL;
    }
};
