 TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q)
    {
        //1.找到特殊情况作为出口
        if (root == p || root == q || root == NULL)
            return root;
        //2.递归调用
        TreeNode* left = lowestCommonAncestor(root->left, p, q);
        TreeNode* right = lowestCommonAncestor(root->right, p, q);
        //3.判断情况
        if (left == nullptr && right == nullptr) return nullptr; // 1.
        if (left == nullptr) return right; // 3.
        if (right == nullptr) return left; // 4.
        return root; // 2. if(left != null and right != null)
    }
