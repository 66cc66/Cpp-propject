
class Solution 
{
public:
    vector<int> v;

    void midorder(TreeNode* root)
    {
        if (root == NULL)
            return;
        midorder(root->left);
        v.push_back(root->val);
        midorder(root->right);
    }

    TreeNode* Build(vector<int>& v, int left, int right)
    {
        if (left > right)
            return NULL;
        int mid = left + (right - left) / 2;
        TreeNode* root = new TreeNode(v[mid]);
        root->left = Build(v, left, mid - 1);
        root->right = Build(v, mid + 1, right);
        return root;
    }

    TreeNode* balanceBST(TreeNode* root) 
    {
        midorder(root);
        return Build(v, 0, v.size() - 1);
    }
};
