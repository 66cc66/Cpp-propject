#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

//value：统计的元素

class Person
{
public:
	string m_name;
	Person(string name)
	{
		this->m_name = name;
	}
	//重载==号让编译器知道该怎么做
	bool operator==(const Person& p)//??为啥要加const, 因为底层就是这样
	{
		if (this->m_name == p.m_name)
			return true;
		return false;
	}
};

void test1()
{
	vector<int> v;
	v.push_back(2);
	v.push_back(1);
	v.push_back(2);
	v.push_back(3);
	v.push_back(2);
	cout << count(v.begin(), v.end(), 2);
}

void test2()
{
	vector<Person> v;
	Person p1("H");
	Person p2("A");
	Person p3("A");
	Person p4("T");
	Person p5("X");
	v.push_back(p1);
	v.push_back(p2);
	v.push_back(p3);
	v.push_back(p4);
	v.push_back(p5);
	cout << count(v.begin(), v.end(), p2);
}

int main()
{
	//test1();
	test2();
	return 0;
}
