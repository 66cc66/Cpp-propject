//返回bool类型的仿函数称为谓词
//operator()接受一个参数称为一元谓词，两个为二元谓词

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

class print
{
public:
	void operator()(int val)//一元谓词
	{
		cout << val << " ";
	}
};

class compare
{
public:
	bool operator()(int v1, int v2)
	{
		return v1 > v2;
	}
};

bool descending(int va1, int va2)
{
	return va1 > va2;
}

void test1()
{
	vector<int> v;
	v.push_back(1);
	v.push_back(2);
	v.push_back(3);
	for_each(v.begin(), v.end(), print());
	cout << endl;
	//sort(v.begin(), v.end(), greater<int>());
	//sort(v.begin(), v.end(), compare());
	sort(v.begin(), v.end(), descending);
	for_each(v.begin(), v.end(), print());
}

int main()
{
	test1();
	return 0;
}
